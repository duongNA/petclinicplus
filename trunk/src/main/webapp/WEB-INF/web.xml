<?xml version="1.0" encoding="ISO-8859-1"?>

<web-app xmlns="http://java.sun.com/xml/ns/j2ee"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://java.sun.com/xml/ns/j2ee http://java.sun.com/xml/ns/j2ee/web-app_2_4.xsd"
	version="2.4">

	<!-- 
	    The root web application context, defined in services-config.xml configures our business facade: 
		the phonebook bean. By seperating the definition 
		of these business services from web related artifacts, 
		we're following a common best practice.    
	-->
	<context-param>
		<param-name>contextConfigLocation</param-name>
		<param-value>
			classpath:org/springframework/webflow/samples/phonebook/stub/services-config.xml
		</param-value>
	</context-param>

	<!-- 
	    The ContextLoaderListener initializes the Spring Framework when our web application 
		is loaded by the servlet engine (e.g. Tomcat). The root application context will be 
		loaded from the services-config.xml classpath resource. 
	-->
	<listener>
		<listener-class>
			org.springframework.web.context.ContextLoaderListener
		</listener-class>
	</listener>

	<!-- 
		Finally we need to properly configure the dispatcher servlet that we defined in web.xml  above. 
		It reads its configuration from two application context files: phonebook-servlet-config.xml 
		contains classic Spring Web MVC artifacts and phonebook-webflow-config.xml contains Spring Web Flow 
		specific elements. 
		Alternatively, we could also have combined all beans into a single web application context.
	-->
	<servlet>
		<servlet-name>phonebook</servlet-name>
		<servlet-class>
			org.springframework.web.servlet.DispatcherServlet
		</servlet-class>
		<init-param>
			<param-name>contextConfigLocation</param-name>
			<param-value>
				/WEB-INF/phonebook-servlet-config.xml
				/WEB-INF/phonebook-webflow-config.xml
				<!-- Comment out to use alternative Java-based Flow Builders
					classpath:org/springframework/webflow/samples/phonebook/webflow/phonebook-webflow-config.xml
				-->
			</param-value>
		</init-param>
	</servlet>

	<servlet-mapping>
		<servlet-name>phonebook</servlet-name>
		<url-pattern>*.htm</url-pattern>
	</servlet-mapping>

	<welcome-file-list>
		<welcome-file>index.html</welcome-file>
	</welcome-file-list>

</web-app>